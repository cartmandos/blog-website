---
import { marked } from "marked"
import { getCollection } from 'astro:content';
import { getEntry, render } from 'astro:content';


interface Props {
  id: string;  // Changed from content to id
  type: 'collection' | 'markdown';
  // content: string
  pageId: string
}

const { id, pageId, type='collection' } = Astro.props

// const post = await getEntry('blog', params.id);
console.log(id)
const post = await getEntry('blog', id);
if (!post) {
  return null;
}

const { Content, headings } = await render(post);
---

<div class="preview-mode" data-page-id={pageId}>
  <div class="preview-content">
    <header class="post-header">
      <div class="post-meta">
        <time datetime={post.data.publishedAt.toISOString()}>
          {post.data.publishedAt.toLocaleDateString()}
        </time>
        <span class="post-author">{post.data.author}</span>
      </div>
      <h1>{post.data.title}</h1>
      {post.data.description && <p class="post-description">{post.data.description}</p>}
      {post.data.tags.length > 0 && (
        <div class="post-tags">
          {post.data.tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}

      <!-- Table of Content [headings: depth, slug, text] -->
      {headings.length && (
        <nav>
          <h2>Table of Contents</h2>
          <ul>
            {headings.map(heading => (
              <li>
                <a href={`#${heading.slug}`}>{heading.text}</a>
              </li>
            ))}
          </ul>
        </nav>
      )}
    </header>
    
    <div class="post-content">   
      <Content />
    </div>
  </div>
</div>


<style>
  .preview-mode {
    padding: 2rem;
    line-height: 1.6;
  }

  .preview-content {
    max-width: 800px;
    margin: 0 auto;
  }

  /* Markdown styling */
  .preview-content :global(h1),
  .preview-content :global(h2),
  .preview-content :global(h3),
  .preview-content :global(h4),
  .preview-content :global(h5),
  .preview-content :global(h6) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.25;
    color: var(--vscode-fg);
  }

  .preview-content :global(h1) {
    font-size: 2em;
    border-bottom: 1px solid var(--vscode-border);
    padding-bottom: 0.3em;
  }

  .preview-content :global(h2) {
    font-size: 1.5em;
    border-bottom: 1px solid var(--vscode-border);
    padding-bottom: 0.3em;
  }

  .preview-content :global(p) {
    margin: 1em 0;
  }

  .preview-content :global(ul),
  .preview-content :global(ol) {
    margin: 1em 0;
    padding-left: 2em;
  }

  .preview-content :global(li) {
    margin: 0.5em 0;
  }

  .preview-content :global(blockquote) {
    margin: 1em 0;
    padding-left: 1em;
    border-left: 0.25em solid var(--vscode-border);
    color: var(--vscode-dim);
  }

  .preview-content :global(code) {
    padding: 0.2em 0.4em;
    background: var(--vscode-hover-bg);
    border-radius: 3px;
    font-family: var(--font-mono);
    font-size: 0.9em;
  }

  .preview-content :global(pre code) {
    display: block;
    padding: 1em;
    overflow-x: auto;
    line-height: 1.45;
  }

  .preview-content :global(table) {
    width: 100%;
    margin: 1em 0;
    border-collapse: collapse;
  }

  .preview-content :global(th),
  .preview-content :global(td) {
    padding: 0.5em;
    border: 1px solid var(--vscode-border);
  }

  .preview-content :global(th) {
    background: var(--vscode-hover-bg);
  }

  .preview-content :global(a) {
    color: var(--vscode-link);
    text-decoration: none;
  }

  .preview-content :global(a:hover) {
    text-decoration: underline;
  }

  .preview-content :global(img) {
    max-width: 100%;
    height: auto;
  }

  .preview-content :global(hr) {
    height: 1px;
    border: none;
    background: var(--vscode-border);
    margin: 2em 0;
  }



    /* New styles for blog post specific elements */
    .post-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--vscode-border);
  }

  .post-meta {
    display: flex;
    gap: 1rem;
    color: var(--vscode-dim);
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
  }

  .post-description {
    color: var(--vscode-dim);
    font-size: 1.1rem;
    margin: 1rem 0;
  }

  .post-tags {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag {
    background: var(--vscode-hover-bg);
    color: var(--vscode-fg);
    padding: 0.2rem 0.5rem;
    border-radius: 3px;
    font-size: 0.8rem;
  }

  /* Existing markdown styling remains the same */
  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4),
  .post-content :global(h5),
  .post-content :global(h6) {
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.25;
    color: var(--vscode-fg);
  }
</style>
