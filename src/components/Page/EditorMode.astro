---
import { Prism } from "@astrojs/prism"

interface Props {
  pageId: string
  rawContent: string
}

const { pageId, rawContent } = Astro.props

function generateLineNumbers(content: string): number[] {
  return Array.from(
    { length: content.split("\n").length },
    (_, index) => index + 1,
  )
}

const lineNumbers = generateLineNumbers(rawContent)
---

<div class="editor-mode" data-page-id={pageId}>
  <div class="line-numbers">
    {lineNumbers.map((num) => <span class="line-number">{num}</span>)}
  </div>

  <div class="editor-content">
    <Prism lang="markdown" code={rawContent} />
  </div>
</div>

<style>
  .editor-mode {
    display: flex;
    min-height: 100%;
    font-family: var(--font-mono);
    font-size: 14px;
    line-height: 1.5;
    tab-size: 2;
  }

  .line-numbers {
    flex-shrink: 0;
    padding: 1rem 0;
    background: var(--vscode-bg);
    border-right: 1px solid var(--vscode-border);
    user-select: none;
  }

  .line-number {
    display: block;
    padding: 0 1rem;
    color: var(--vscode-dim);
    text-align: right;
  }

  .editor-content {
    padding-inline-start: 1rem;
    flex: 1;
    margin: 0;
    /* padding: 1rem; */
    background: transparent;
    /** if we wrap then line-numbers don't match 
    overflow: hidden;
    white-space: pre-wrap; */
  }

  /* Syntax highlighting styles */
  .editor-content :global(.token.heading) {
    color: #bd93f9;
  }

  .editor-content :global(.token.bold) {
    color: #ffb86c;
    font-weight: bold;
  }

  .editor-content :global(.token.italic) {
    color: #f1fa8c;
    font-style: italic;
  }

  .editor-content :global(.token.list) {
    color: #ff79c6;
  }

  .editor-content :global(.token.link) {
    color: #8be9fd;
  }

  .editor-content :global(.token.code) {
    color: #50fa7b;
  }

  .editor-content :global(.token.blockquote) {
    color: #6272a4;
  }
</style>
