---
import CommandInput from "./CommandInput.astro";
import TerminalOutput from "./TerminalOutput.astro";
import ContainerMatrix from "../ContainerMatrix.astro";
import AsciiArt from "./AsciiArt.astro";
import { getTimestamp } from "../../utils/time";
import { fileSystem } from "../../utils/filesystem/commands";
import { formatProfileInfo } from "../../utils/profile";

interface Props {
  initialOutput?: {
    command: string;
    output: string[];
  }[];
}

const { initialOutput = [] } = Astro.props;
const terminalId = "terminal-container";

const title = "guest@portfolio";

// Your profile information
const profileInfo = {
  name: "Oren Damien Shomrai",
  title: "Software Engineer",
  location: "Israel",
  email: "damien.shomrai@gmail.com",
  languages: ["Node.js", "Python"],
  technologies: ["Docker", "Kubernetes"],
  specialization: ["Backend Development", "Infra"],
  github: "github.com/cartmandos",
  // linkedin: 'linkedin.com/in/damien-shomrai',
  // website: 'damienshomrai.com',
};

// Create neofetch-style initial output
const neofetchOutput = {
  command: "whoami",
  output: formatProfileInfo(profileInfo),
};

const defaultOutput = [neofetchOutput, ...initialOutput];
---

<div class="terminal-window" id="terminal">
  <div class="terminal-header">
    <div class="controls">
      <span class="control close"></span>
      <span class="control minimize"></span>
      <span class="control maximize"></span>
    </div>
    <div class="title">guest@portfolio - Terminal</div>
  </div>

  <div class="terminal-container" id={terminalId}>
    <ContainerMatrix containerId={terminalId} initialOpacity={0.2} />

    <div class="terminal-content">
      <TerminalOutput
        command={neofetchOutput.command}
        output={[""]}
        timestamp={getTimestamp()}
      />
      <div class="neofetch-container">
        <div class="ascii-logo">
          <AsciiArt filepath="profile-outlined.txt" />
        </div>

        <div class="system-info">
          <div class="info-label" set:html={title} />
          <div class="info-line" set:html={"- ".repeat(title.length / 2 + 1)} />
          {
            neofetchOutput.output.map((line) => (
              <div class="info-line" set:html={line} />
            ))
          }
        </div>
      </div>

      {
        initialOutput.map((entry) => (
          <TerminalOutput
            command={entry.command}
            output={entry.output}
            timestamp={getTimestamp()}
          />
        ))
      }

      <CommandInput prompt={fileSystem.getPrompt()} />
    </div>
  </div>
</div>

<script>
  import { initializeTerminal } from "./terminalClient";

  document.addEventListener("DOMContentLoaded", () => {
    initializeTerminal();
  });
</script>

<style>
  .terminal-window {
    background: var(--terminal-dark);
    border: 1px solid var(--terminal-green);
    box-shadow: 0 0 20px var(--terminal-shadow);
    border-radius: 6px;
    overflow: hidden;
    margin-bottom: 2rem;
  }

  .terminal-header {
    background: var(--terminal-header);
    padding: 0.5rem;
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--terminal-green);
    position: relative;
    z-index: 2;
  }

  .controls {
    display: flex;
    gap: 0.5rem;
    margin-right: 1rem;
  }

  .control {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  .close {
    background: #ff5f56;
  }
  .minimize {
    background: #ffbd2e;
  }
  .maximize {
    background: #27c93f;
  }

  .title {
    color: var(--terminal-dim);
    font-size: 0.9em;
  }

  .terminal-container {
    position: relative;
    min-height: 300px;
    max-height: 80vh;
  }

  .terminal-content {
    position: relative;
    z-index: 2;
    padding: 1rem;
    min-height: 300px;
    max-height: 80vh;
    overflow-y: auto;
    background: transparent;
  }

  .neofetch-container {
    display: flex;
    gap: 2rem;
    margin-bottom: 2rem;
    padding: 1rem;
  }

  .ascii-logo {
    flex-shrink: 0;
    min-width: 300px;
    /* change this margin usage  */

    margin-right: 50px;
  }

  .system-info {
    padding-top: 1rem;
    align-self: center;
  }

  .info-line {
    margin-bottom: 0.5rem;
    white-space: pre-wrap;
    line-height: 1.5;
    color: var(--terminal-bright);
  }

  :global(.info-label) {
    color: var(--terminal-green);

    font-weight: bold;
    display: inline-block;
  }
</style>
