---
import MainLayout from "@/layouts/MainLayout.astro"
import Header from "@/components/Header.astro"
import Terminal from "@/components/Terminal/Terminal.astro"
import { blogSystem } from "../utils/blog/blog"

const initialOutput = [
  {
    command: "help blog",
    output: [
      "Blog Commands:",
      "  ls [-l]              List all posts",
      "  cat <slug>           Read a post",
      "  log <slug>           Show post history",
      "  diff <slug> <hash>   Show changes in a specific version",
      "  top [count]          Show most viewed posts",
      "",
      "Example: cat building-scalable-microservices",
    ],
  },
  {
    command: "ls -l",
    output: blogSystem.ls(["-l"]),
  },
]
---

<MainLayout title="Blog - Terminal Portfolio">
  <Header pageName="Blog" currentPath="/blog" />
  <Terminal initialOutput={initialOutput} />
</MainLayout>

<script>
  import { blogSystem } from "../utils/blog/blog"

  // Add blog-specific commands to the command system
  const existingExecuteCommand = window.executeCommand

  window.executeCommand = (cmd: string): string[] => {
    const [command, ...args] = cmd.trim().split(/\s+/)

    switch (command) {
      case "cat":
        return args.length
          ? blogSystem.cat(args[0])
          : ["Usage: cat <post-slug>"]

      case "log":
        return args.length
          ? blogSystem.log(args[0])
          : ["Usage: log <post-slug>"]

      case "diff":
        return args.length >= 2
          ? blogSystem.diff(args[0], args[1])
          : ["Usage: diff <post-slug> <commit-hash>"]

      case "top":
        const count = args.length ? parseInt(args[0]) : 5
        return blogSystem.top(count)

      default:
        return existingExecuteCommand(cmd)
    }
  }
</script>
